//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ProyectoCompi/Grammar/MiniCSharpParser.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IMiniCSharpParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class MiniCSharpParserBaseListener : IMiniCSharpParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCSharpParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] MiniCSharpParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCSharpParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] MiniCSharpParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCSharpParser.classDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDecl([NotNull] MiniCSharpParser.ClassDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCSharpParser.classDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDecl([NotNull] MiniCSharpParser.ClassDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCSharpParser.classBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassBody([NotNull] MiniCSharpParser.ClassBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCSharpParser.classBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassBody([NotNull] MiniCSharpParser.ClassBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCSharpParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDecl([NotNull] MiniCSharpParser.VarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCSharpParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDecl([NotNull] MiniCSharpParser.VarDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCSharpParser.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDecl([NotNull] MiniCSharpParser.MethodDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCSharpParser.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDecl([NotNull] MiniCSharpParser.MethodDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCSharpParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParamList([NotNull] MiniCSharpParser.ParamListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCSharpParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParamList([NotNull] MiniCSharpParser.ParamListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCSharpParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam([NotNull] MiniCSharpParser.ParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCSharpParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam([NotNull] MiniCSharpParser.ParamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCSharpParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] MiniCSharpParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCSharpParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] MiniCSharpParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCSharpParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt([NotNull] MiniCSharpParser.StmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCSharpParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt([NotNull] MiniCSharpParser.StmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCSharpParser.exprStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprStmt([NotNull] MiniCSharpParser.ExprStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCSharpParser.exprStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprStmt([NotNull] MiniCSharpParser.ExprStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCSharpParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] MiniCSharpParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCSharpParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] MiniCSharpParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCSharpParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgList([NotNull] MiniCSharpParser.ArgListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCSharpParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgList([NotNull] MiniCSharpParser.ArgListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCSharpParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] MiniCSharpParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCSharpParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] MiniCSharpParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCSharpParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] MiniCSharpParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCSharpParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] MiniCSharpParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCSharpParser.innerClassDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInnerClassDecl([NotNull] MiniCSharpParser.InnerClassDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCSharpParser.innerClassDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInnerClassDecl([NotNull] MiniCSharpParser.InnerClassDeclContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
